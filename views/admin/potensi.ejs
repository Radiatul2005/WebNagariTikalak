<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title><%= title %></title>

    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap" rel="stylesheet" />
    <style>
        /* Gaya umum (dari admin/berita.ejs, disalin untuk kemudahan) */
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { font-family: 'Poppins', sans-serif; background: #f8f9fa; min-height: 100vh; }
        .content { flex: 1; padding: 30px; background: #f8f9fa; overflow-y: auto; }
        .page-header { background: white; padding: 25px; border-radius: 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); margin-bottom: 30px; }
        .page-title { font-size: 24px; font-weight: 700; color: #1e3a8a; margin-bottom: 8px; }
        .page-subtitle { color: #64748b; font-size: 14px; }
        .content-grid { display: grid; grid-template-columns: 1fr 400px; gap: 30px; }
        .main-content { background: white; border-radius: 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); overflow: hidden; }
        .content-header { padding: 20px 25px; background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%); color: white; display: flex; justify-content: space-between; align-items: center; }
        .content-title { font-size: 18px; font-weight: 600; }

        /* Buttons */
        .btn-primary { background: #10b981; color: white; padding: 10px 20px; border: none; border-radius: 8px; cursor: pointer; font-weight: 500; transition: all 0.3s; }
        .btn-primary:hover { background: #059669; transform: translateY(-2px); }
        .btn-secondary { background: #6b7280; color: white; padding: 8px 16px; border: none; border-radius: 6px; cursor: pointer; font-size: 12px; margin-right: 8px; }
        .btn-warning { background: #f59e0b; color: white; padding: 8px 16px; border: none; border-radius: 6px; cursor: pointer; font-size: 12px; margin-right: 8px; }
        .btn-danger { background: #ef4444; color: white; padding: 8px 16px; border: none; border-radius: 6px; cursor: pointer; font-size: 12px; }

        /* List items */
        .potensi-list { padding: 25px; min-height: 400px; }
        .potensi-item { display: flex; gap: 20px; padding: 20px; border-bottom: 1px solid #e5e7eb; transition: background 0.3s; }
        .potensi-item:hover { background: #f9fafb; }
        .potensi-item:last-child { border-bottom: none; }
        .potensi-image { width: 120px; height: 80px; background: #e5e7eb; border-radius: 8px; object-fit: cover; flex-shrink: 0; }
        .potensi-content { flex: 1; }
        .potensi-title { font-size: 16px; font-weight: 600; color: #1e293b; margin-bottom: 8px; cursor: pointer; }
        .potensi-title:hover { color: #3b82f6; }
        .potensi-excerpt { color: #64748b; font-size: 14px; line-height: 1.5; margin-bottom: 12px; }
        .potensi-meta { display: flex; align-items: center; gap: 15px; font-size: 12px; color: #9ca3af; }
        
        .potensi-type {
            display: inline-block;
            padding: 4px 8px;
            border-radius: 4px;
            font-size: 10px;
            font-weight: 500;
            text-transform: uppercase;
        }
        .type-umkm { background: #d1fae5; color: #065f46; } /* Greenish for UMKM */
        .type-pariwisata { background: #c7e8ff; color: #0f4c81; } /* Bluish for Pariwisata */
        .type-budaya-lokal { background: #fef3c7; color: #92400e; } /* Orangey for Budaya Lokal */


        .potensi-actions { display: flex; align-items: center; gap: 8px; }

        /* Sidebar */
        .sidebar-panel { background: white; border-radius: 12px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); height: fit-content; }
        .panel-header { padding: 20px; background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white; border-radius: 12px 12px 0 0; }
        .panel-title { font-size: 16px; font-weight: 600; }
        .panel-content { padding: 20px; }

        /* Forms */
        .form-group { margin-bottom: 20px; }
        .form-label { display: block; margin-bottom: 8px; font-weight: 500; color: #374151; }
        .form-input, .form-textarea, .form-select { width: 100%; padding: 12px; border: 1px solid #d1d5db; border-radius: 8px; font-size: 14px; transition: border-color 0.3s; }
        .form-input:focus, .form-textarea:focus, .form-select:focus { outline: none; border-color: #3b82f6; }
        .form-textarea { resize: vertical; min-height: 120px; }
        .form-file { width: 100%; padding: 12px; border: 1px dashed #d1d5db; border-radius: 8px; background: #f9fafb; cursor: pointer; transition: all 0.3s; }
        .form-file:hover { border-color: #3b82f6; background: #eff6ff; }

        /* Modals */
        .modal { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.5); z-index: 1000; }
        .modal-content { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; border-radius: 12px; width: 90%; max-width: 600px; max-height: 80vh; overflow-y: auto; }
        .modal-header { padding: 20px; background: linear-gradient(135deg, #3b82f6 0%, #1e40af 100%); color: white; border-radius: 12px 12px 0 0; display: flex; justify-content: space-between; align-items: center; }
        .modal-title { font-size: 18px; font-weight: 600; }
        .close-btn { background: none; border: none; color: white; font-size: 20px; cursor: pointer; width: 30px; height: 30px; border-radius: 50%; display: flex; align-items: center; justify-content: center; transition: background 0.3s; }
        .close-btn:hover { background: rgba(255,255,255,0.2); }
        .modal-body { padding: 20px; }

        /* Empty State & Stats */
        .empty-state { text-align: center; padding: 60px 20px; color: #9ca3af; }
        .empty-icon { font-size: 48px; margin-bottom: 16px; }
        .empty-title { font-size: 18px; font-weight: 600; margin-bottom: 8px; }
        .empty-subtitle { font-size: 14px; }
        .stats-item { display: flex; justify-content: space-between; margin-bottom: 8px; padding: 8px 0; }
        .stats-item span:first-child { color: #374151; font-weight: 500; }
        .stats-item span:last-child { color: #1e40af; font-weight: 600; }
        .recent-item { padding: 10px 0; border-bottom: 1px solid #f3f4f6; }
        .recent-item:last-child { border-bottom: none; }
        .recent-title { font-size: 12px; color: #374151; font-weight: 500; margin-bottom: 4px; }
        .recent-date { font-size: 11px; color: #9ca3af; }

        /* Detail Modal */
        .detail-modal .modal-content { max-width: 800px; }
        .detail-image { width: 100%; height: 300px; object-fit: cover; border-radius: 8px; margin-bottom: 20px; }
        .detail-title { font-size: 24px; font-weight: 700; color: #1e293b; margin-bottom: 15px; }
        .detail-meta { display: flex; gap: 20px; margin-bottom: 20px; font-size: 14px; color: #64748b; flex-wrap: wrap; }
        .detail-content { line-height: 1.6; color: #374151; }

        /* Map for Location Input */
        #locationMap {
            width: 100%;
            height: 250px; /* Adjust height as needed */
            border-radius: 8px;
            margin-top: 10px;
            border: 1px solid #d1d5db;
        }

        /* Responsive */
        @media (max-width: 1200px) { .content-grid { grid-template-columns: 1fr; } }
        @media (max-width: 768px) {
            .content { padding: 20px; }
            .potensi-item { flex-direction: column; gap: 15px; }
            .potensi-image { width: 100%; height: 200px; }
            .potensi-actions { justify-content: flex-start; }
        }
    </style>
</head>
<body>
    <div class="content">
        <div class="page-header">
            <h1 class="page-title">Kelola Potensi Nagari</h1>
            <p class="page-subtitle">Tambah, edit, dan hapus data potensi seperti UMKM, pariwisata, dan budaya lokal di Nagari Tikalak.</p>
        </div>

        <div class="content-grid">
            <div class="main-content">
                <div class="content-header">
                    <div class="content-title">Daftar Potensi</div>
                    <button class="btn-primary" id="createPotensiBtn">+ Tambah Potensi Baru</button>
                </div>

                <div class="potensi-list" id="potensiList">
                </div>
            </div>

            <div class="sidebar-panel">
                <div class="panel-header">
                    <div class="panel-title">Statistik Potensi</div>
                </div>
                <div class="panel-content">
                    <div style="margin-bottom: 20px;">
                        <div class="stats-item">
                            <span>Total Potensi</span>
                            <span id="totalPotensi">0</span>
                        </div>
                        <div class="stats-item">
                            <span>UMKM</span>
                            <span id="umkmPotensi">0</span>
                        </div>
                        <div class="stats-item">
                            <span>Pariwisata</span>
                            <span id="pariwisataPotensi">0</span>
                        </div>
                        <div class="stats-item">
                            <span>Budaya Lokal</span>
                            <span id="budayaLokalPotensi">0</span>
                        </div>
                    </div>
                    <hr style="margin: 20px 0; border: none; border-top: 1px solid #e5e7eb;">
                    <div>
                        <h4 style="margin-bottom: 15px; font-size: 14px; color: #374151;">Potensi Terbaru</h4>
                        <div id="recentPotensi">
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div id="potensiModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title" id="modalTitle">Tambah Potensi Baru</div>
                <button class="close-btn" id="closePotensiModalBtn">×</button>
            </div>
            <div class="modal-body">
                <form id="potensiForm">
                    <div class="form-group">
                        <label class="form-label">Nama Potensi</label>
                        <input type="text" class="form-input" id="potensiNama" placeholder="Masukkan nama potensi..." required>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Jenis Potensi</label>
                        <select class="form-select" id="potensiJenis" required>
                            <option value="">Pilih Jenis</option>
                            <option value="Pariwisata">Pariwisata</option>
                            <option value="Budaya Lokal">Budaya Lokal</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Latitude</label>
                        <input type="text" class="form-input" id="potensiLatitude" name="latitude" placeholder="Contoh: -0.6655490089802755">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Longitude</label>
                        <input type="text" class="form-input" id="potensiLongitude" name="longitude" placeholder="Contoh: 100.59429003689273">
                    </div>

                    <div class="form-group">
                        <label class="form-label">Pilih Lokasi di Peta (Opsional)</label>
                        <div id="locationMap"></div>
                        <p style="font-size: 12px; color: #64748b; margin-top: 5px;">Klik pada peta untuk memilih lokasi atau masukkan Latitude/Longitude secara manual.</p>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Foto Potensi</label>
                        <input type="file" class="form-file" id="potensiFoto" accept="image/*">
                        <div id="imagePreview" style="margin-top: 10px; display: none;">
                            <img id="previewImg" style="max-width: 100%; height: 200px; object-fit: cover; border-radius: 8px;">
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="form-label">Deskripsi</label>
                        <textarea class="form-textarea" id="potensiDeskripsi" placeholder="Tulis deskripsi potensi..." required></textarea>
                    </div>

                    <div style="display: flex; gap: 10px; justify-content: flex-end;">
                        <button type="button" class="btn-secondary" onclick="closeModal()">Batal</button>
                        <button type="submit" class="btn-primary">Simpan Potensi</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div id="detailModal" class="modal detail-modal">
        <div class="modal-content">
            <div class="modal-header">
                <div class="modal-title">Detail Potensi</div>
                <button class="close-btn" id="closeDetailModalBtn">×</button>
            </div>
            <div class="modal-body">
                <div id="detailContent">
                </div>
            </div>
        </div>
    </div>

<script>
    let editingId = null;
    let mapForLocationInput; // Global variable for the map in the modal
    let markerForLocationInput; // Marker for the map in the modal

    // Helper function to show messages
    function showMessage(message, type = 'info') {
        const messageContainer = document.getElementById('potensiList');
        const msgDiv = document.createElement('div');
        msgDiv.className = `alert alert-${type}`;
        msgDiv.style.padding = '10px';
        msgDiv.style.borderRadius = '5px';
        msgDiv.style.marginBottom = '15px';
        msgDiv.style.backgroundColor = type === 'error' ? '#f8d7da' : '#d1ecf1';
        msgDiv.style.color = type === 'error' ? '#721c24' : '#0c5460';
        msgDiv.textContent = message;

        messageContainer.prepend(msgDiv);

        setTimeout(() => {
            msgDiv.remove();
        }, 5000);
    }

    // Load potensi data from API
    async function loadPotensi() {
        const potensiList = document.getElementById('potensiList');
        potensiList.innerHTML = `
            <div class="empty-state">
                <div class="empty-title">Memuat potensi...</div>
                <div class="empty-subtitle">Harap tunggu</div>
            </div>
        `;

        try {
            const response = await fetch('/potensi/api/list');
            const result = await response.json();

            if (result.success) {
                const data = result.data;
                const stats = result.stats;

                if (data.length === 0) {
                    potensiList.innerHTML = `
                        <div class="empty-state">
                            <div class="empty-icon">✨</div>
                            <div class="empty-title">Belum ada potensi</div>
                            <div class="empty-subtitle">Mulai dengan menambahkan potensi pertama Anda</div>
                        </div>
                    `;
                } else {
                    potensiList.innerHTML = data.map(potensi => `
                        <div class="potensi-item">
                            <img src="${potensi.foto || '/uploads/potensi/default-potensi.jpg'}" alt="${potensi.nama_potensi}" class="potensi-image">
                            <div class="potensi-content">
                                <div class="potensi-title" data-action="detail" data-id="${potensi.id}">${potensi.nama_potensi}</div>
                                <div class="potensi-excerpt">${potensi.deskripsi.substring(0, 150)}...</div>
                                <div class="potensi-meta">
                                    <span>📅 ${formatDate(potensi.tanggal_dibuat)}</span>
                                    <span class="potensi-type type-${potensi.jenis.toLowerCase().replace(/\s/g, '-')}">
                                        ${potensi.jenis}
                                    </span>
                                    ${potensi.latitude !== null && potensi.longitude !== null ? `<span>📍 ${parseFloat(potensi.latitude).toFixed(6)}, ${parseFloat(potensi.longitude).toFixed(6)}</span>` : ''}
                                </div>
                            </div>
                            <div class="potensi-actions">
                                <button class="btn-secondary" data-action="edit" data-id="${potensi.id}">Edit</button>
                                <button class="btn-danger" data-action="delete" data-id="${potensi.id}">Hapus</button>
                            </div>
                        </div>
                    `).join('');

                    attachDynamicEventListeners();
                }

                updateStats(stats);
                updateRecentPotensi(data);
            } else {
                showMessage(`Error: ${result.message}`, 'error');
                potensiList.innerHTML = `
                    <div class="empty-state">
                        <div class="empty-icon">⚠️</div>
                        <div class="empty-title">Gagal memuat potensi</div>
                        <div class="empty-subtitle">${result.message}</div>
                    </div>
                `;
            }
        } catch (error) {
            console.error("Error fetching potensi data:", error);
            showMessage(`Gagal memuat potensi: ${error.message}`, 'error');
            potensiList.innerHTML = `
                <div class="empty-state">
                    <div class="empty-icon">❌</div>
                    <div class="empty-title">Terjadi kesalahan</div>
                    <div class="empty-subtitle">Periksa koneksi Anda atau hubungi administrator.</div>
                </div>
            `;
        }
    }

    // Function to attach event listeners to dynamically created elements
    function attachDynamicEventListeners() {
        const potensiListElement = document.getElementById('potensiList');

        potensiListElement.addEventListener('click', (event) => {
            const target = event.target;
            const id = target.dataset.id;
            const action = target.dataset.action;

            if (action === 'edit' && id) {
                editPotensi(parseInt(id));
            } else if (action === 'delete' && id) {
                deletePotensi(parseInt(id));
            } else if (target.classList.contains('potensi-title') && target.dataset.action === 'detail' && id) {
                showDetail(parseInt(id));
            }
        });
    }

    function updateStats(stats) {
        document.getElementById('totalPotensi').textContent = stats.total;
        document.getElementById('umkmPotensi').textContent = stats.umkm;
        document.getElementById('pariwisataPotensi').textContent = stats.pariwisata;
        document.getElementById('budayaLokalPotensi').textContent = stats.budaya_lokal;
    }

    function updateRecentPotensi(data) {
        const recentPotensiContainer = document.getElementById('recentPotensi');
        // Sort by creation date and get top 3
        const recent = [...data].sort((a, b) => new Date(b.tanggal_dibuat) - new Date(a.tanggal_dibuat)).slice(0, 3);

        if (recent.length === 0) {
            recentPotensiContainer.innerHTML = '<div style="text-align: center; color: #9ca3af;">Belum ada potensi terbaru</div>';
            return;
        }

        recentPotensiContainer.innerHTML = recent.map(potensi => `
            <div class="recent-item">
                <div class="recent-title">${potensi.nama_potensi}</div>
                <div class="recent-date">${formatDate(potensi.tanggal_dibuat)}</div>
            </div>
        `).join('');
    }

    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString('id-ID', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
        });
    }

    // Initialize Google Map for location selection in the modal
    function initMapForLocationSelection() {
        const defaultLocation = { lat: -0.665549, lng: 100.594290 }; // Nagari Tikalak default

        mapForLocationInput = new google.maps.Map(document.getElementById('locationMap'), {
            center: defaultLocation,
            zoom: 14,
            fullscreenControl: false,
            streetViewControl: false,
            mapTypeControl: false,
            zoomControl: true,
            styles: [ // Basic styles to remove some POIs for cleaner look
                {
                    featureType: 'poi',
                    elementType: 'labels',
                    stylers: [{ visibility: 'off' }]
                }
            ]
        });

        markerForLocationInput = new google.maps.Marker({
            position: defaultLocation,
            map: mapForLocationInput,
            draggable: true, // Make marker draggable
            title: 'Drag untuk pilih lokasi'
        });

        // Update latitude/longitude inputs when marker is dragged
        markerForLocationInput.addListener('dragend', function() {
            const newLat = markerForLocationInput.getPosition().lat();
            const newLng = markerForLocationInput.getPosition().lng();
            document.getElementById('potensiLatitude').value = newLat.toFixed(8);
            document.getElementById('potensiLongitude').value = newLng.toFixed(8);
        });

        // Update latitude/longitude inputs when map is clicked
        mapForLocationInput.addListener('click', function(event) {
            const clickedLat = event.latLng.lat();
            const clickedLng = event.latLng.lng();
            document.getElementById('potensiLatitude').value = clickedLat.toFixed(8);
            document.getElementById('potensiLongitude').value = clickedLng.toFixed(8);
            markerForLocationInput.setPosition(event.latLng); // Move marker to clicked location
        });

        // Update marker position and map center when latitude/longitude inputs change manually
        document.getElementById('potensiLatitude').addEventListener('change', updateMapFromInputs);
        document.getElementById('potensiLongitude').addEventListener('change', updateMapFromInputs);
    }

    function updateMapFromInputs() {
        let lat = parseFloat(document.getElementById('potensiLatitude').value);
        let lng = parseFloat(document.getElementById('potensiLongitude').value);

        if (!isNaN(lat) && !isNaN(lng)) {
            const newPosition = { lat: lat, lng: lng };
            if (markerForLocationInput) {
                markerForLocationInput.setPosition(newPosition);
            } else {
                markerForLocationInput = new google.maps.Marker({
                    position: newPosition,
                    map: mapForLocationInput,
                    draggable: true,
                    title: 'Drag untuk pilih lokasi'
                });
            }
            mapForLocationInput.setCenter(newPosition);
        } else if (markerForLocationInput) {
             // If inputs are cleared or invalid, try to remove the marker or reset
            markerForLocationInput.setMap(null); // Remove marker
            markerForLocationInput = null;
        }
    }

    // Open add modal
    function openAddModal() {
        editingId = null;
        document.getElementById('modalTitle').textContent = 'Tambah Potensi Baru';
        document.getElementById('potensiForm').reset();
        document.getElementById('previewImg').src = '';
        document.getElementById('imagePreview').style.display = 'none';
        
        // Clear latitude/longitude and reset map
        document.getElementById('potensiLatitude').value = '';
        document.getElementById('potensiLongitude').value = '';
        if (markerForLocationInput) {
            markerForLocationInput.setMap(null); // Remove existing marker
            markerForLocationInput = null;
        }
        // Re-initialize map or center it to default for new entry
        if (mapForLocationInput) {
            mapForLocationInput.setCenter({ lat: -0.665549, lng: 100.594290 }); // Default center for Nagari Tikalak
            mapForLocationInput.setZoom(14);
            initMapForLocationSelection(); // Re-add default marker
        } else {
            // If map hasn't been initialized yet for some reason (shouldn't happen on DOMContentLoaded)
            loadGoogleMapsScriptForModal('<%= googleMapsApiKey %>');
        }


        document.getElementById('potensiModal').style.display = 'block';
    }

    // Edit potensi
    async function editPotensi(id) {
        try {
            const response = await fetch(`/potensi/api/${id}`);
            const result = await response.json();

            if (result.success) {
                const potensi = result.data;
                editingId = potensi.id;
                document.getElementById('modalTitle').textContent = 'Edit Potensi';
                document.getElementById('potensiNama').value = potensi.nama_potensi;
                document.getElementById('potensiJenis').value = potensi.jenis;
                document.getElementById('potensiDeskripsi').value = potensi.deskripsi;
                // Set value from data (even if null/undefined, it will be handled by || '')
                document.getElementById('potensiLatitude').value = potensi.latitude || ''; 
                document.getElementById('potensiLongitude').value = potensi.longitude || '';

                if (potensi.foto) {
                    document.getElementById('previewImg').src = potensi.foto;
                    document.getElementById('imagePreview').style.display = 'block';
                } else {
                    document.getElementById('previewImg').src = '';
                    document.getElementById('imagePreview').style.display = 'none';
                }

                // Update map for editing with existing coordinates
                if (mapForLocationInput && potensi.latitude !== null && potensi.longitude !== null) {
                    const position = { lat: parseFloat(potensi.latitude), lng: parseFloat(potensi.longitude) };
                    if (markerForLocationInput) {
                        markerForLocationInput.setPosition(position);
                    } else {
                        markerForLocationInput = new google.maps.Marker({
                            position: position,
                            map: mapForLocationInput,
                            draggable: true,
                            title: 'Drag untuk pilih lokasi'
                        });
                        markerForLocationInput.addListener('dragend', function() {
                            const newLat = markerForLocationInput.getPosition().lat();
                            const newLng = markerForLocationInput.getPosition().lng();
                            document.getElementById('potensiLatitude').value = newLat.toFixed(8);
                            document.getElementById('potensiLongitude').value = newLng.toFixed(8);
                        });
                    }
                    mapForLocationInput.setCenter(position);
                    mapForLocationInput.setZoom(16);
                } else {
                    if (markerForLocationInput) {
                        markerForLocationInput.setMap(null);
                        markerForLocationInput = null;
                    }
                    if (mapForLocationInput) {
                        mapForLocationInput.setCenter({ lat: -0.665549, lng: 100.594290 });
                        mapForLocationInput.setZoom(14);
                    }
                }

                document.getElementById('potensiModal').style.display = 'block';
            } else {
                showMessage(`Error memuat potensi untuk diedit: ${result.message}`, 'error');
            }
        } catch (error) {
            console.error("Error fetching potensi for edit:", error);
            showMessage(`Gagal memuat potensi untuk diedit: ${error.message}`, 'error');
        }
    }

    // Close modal
    function closeModal() {
        document.getElementById('potensiModal').style.display = 'none';
        editingId = null;
        if (markerForLocationInput) {
            markerForLocationInput.setMap(null);
            markerForLocationInput = null;
        }
        if (mapForLocationInput) {
            mapForLocationInput.setCenter({ lat: -0.665549, lng: 100.594290 });
            mapForLocationInput.setZoom(14);
        }
    }

    // Close detail modal
    function closeDetailModal() {
        document.getElementById('detailModal').style.display = 'none';
    }


    // Show detail
    async function showDetail(id) {
        try {
            const response = await fetch(`/potensi/api/${id}`);
            const result = await response.json();

            if (result.success) {
                const potensi = result.data;
                document.getElementById('detailContent').innerHTML = `
                    <img src="${potensi.foto || '/uploads/potensi/default-potensi.jpg'}" alt="${potensi.nama_potensi}" class="detail-image">
                    <h2 class="detail-title">${potensi.nama_potensi}</h2>
                    <div class="detail-meta">
                        <span>📅 ${formatDate(potensi.tanggal_dibuat)}</span>
                        <span class="potensi-type type-${potensi.jenis.toLowerCase().replace(/\s/g, '-')}">
                            ${potensi.jenis}
                        </span>
                        ${potensi.latitude !== null && potensi.longitude !== null ? `
                            <span>📍 ${parseFloat(potensi.latitude).toFixed(6)}, ${parseFloat(potensi.longitude).toFixed(6)}</span>
                            <a href="https://www.google.com/maps/search/?api=1&query=${parseFloat(potensi.latitude)},${parseFloat(potensi.longitude)}" target="_blank" class="btn-secondary" style="margin-left: auto; text-decoration: none; padding: 4px 8px; border-radius: 4px; font-size: 12px; background: #3b82f6;">Lihat di Gmaps</a>
                        ` : ''}
                    </div>
                    <div class="detail-content">${potensi.deskripsi}</div>
                `;
                document.getElementById('detailModal').style.display = 'block';
            } else {
                showMessage(`Error memuat detail potensi: ${result.message}`, 'error');
            }
        } catch (error) {
            console.error("Error fetching potensi detail:", error);
            showMessage(`Gagal memuat detail potensi: ${error.message}`, 'error');
        }
    }

    // Delete potensi
    async function deletePotensi(id) {
        if (confirm('Apakah Anda yakin ingin menghapus potensi ini?')) {
            try {
                const response = await fetch(`/potensi/api/${id}`, {
                    method: 'DELETE'
                });
                const result = await response.json();

                if (result.success) {
                    showMessage(result.message, 'info');
                    loadPotensi();
                } else {
                    showMessage(`Gagal menghapus potensi: ${result.message}`, 'error');
                }
            } catch (error) {
                console.error("Error deleting potensi:", error);
                showMessage(`Gagal menghapus potensi: ${error.message}`, 'error');
            }
        }
    }

    // Handle form submission (Create/Update)
    document.getElementById('potensiForm').addEventListener('submit', async function(e) {
        e.preventDefault();

        const nama_potensi = document.getElementById('potensiNama').value;
        const jenis = document.getElementById('potensiJenis').value;
        const deskripsi = document.getElementById('potensiDeskripsi').value;
        const fotoFile = document.getElementById('potensiFoto').files[0];
        // Pastikan nilai latitude dan longitude diambil dari input fields
        const latitude = document.getElementById('potensiLatitude').value;
        const longitude = document.getElementById('potensiLongitude').value;


        const formData = new FormData();
        formData.append('nama_potensi', nama_potensi);
        formData.append('jenis', jenis);
        formData.append('deskripsi', deskripsi);
        formData.append('latitude', latitude); // Ini akan selalu disertakan, bahkan jika kosong (string "")
        formData.append('longitude', longitude); // Ini akan selalu disertakan, bahkan jika kosong (string "")
        if (fotoFile) {
            formData.append('foto', fotoFile);
        }

        let url = '/potensi/api/create';
        let method = 'POST';

        if (editingId) {
            url = `/potensi/api/${editingId}`;
            method = 'PUT';
        }

        try {
            const response = await fetch(url, {
                method: method,
                body: formData
            });
            const result = await response.json();

            if (result.success) {
                showMessage(result.message, 'success');
                closeModal();
                loadPotensi();
            } else {
                showMessage(`Error: ${result.message}`, 'error');
            }
        } catch (error) {
            console.error("Error saving potensi:", error);
            showMessage(`Gagal menyimpan potensi: ${error.message}`, 'error');
        }
    });

    // Handle image preview
    document.getElementById('potensiFoto').addEventListener('change', function(e) {
        const file = e.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                document.getElementById('previewImg').src = e.target.result;
                document.getElementById('imagePreview').style.display = 'block';
            };
            reader.readAsDataURL(file);
        } else {
            document.getElementById('previewImg').src = '';
            document.getElementById('imagePreview').style.display = 'none';
        }
    });

    // Close modal when clicking outside
    window.addEventListener('click', function(e) {
        if (e.target.classList.contains('modal')) {
            e.target.style.display = 'none';
        }
    });

    // Load Google Maps API script specifically for the modal map
    function loadGoogleMapsScriptForModal(apiKey) {
        if (window.google && window.google.maps) {
            initMapForLocationSelection();
            return;
        }

        const script = document.createElement('script');
        script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&libraries=places&callback=initMapForLocationSelection`;
        script.async = true;
        script.defer = true;
        document.head.appendChild(script);
    }

    // Initial load and event listeners for static elements
    document.addEventListener('DOMContentLoaded', () => {
        loadPotensi();
        document.getElementById('createPotensiBtn').addEventListener('click', () => {
            openAddModal();
            loadGoogleMapsScriptForModal('<%= googleMapsApiKey %>');
        });
        document.getElementById('closePotensiModalBtn').addEventListener('click', closeModal);
        document.getElementById('closeDetailModalBtn').addEventListener('click', closeDetailModal);
    });
</script>
</body>
</html>