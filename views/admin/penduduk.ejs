<%- include('partials/header_top', { title: title }); %> <%# Memanggil header_top.ejs untuk <head> dan top bar %>

    <div class="container">
        <%- include('partials/nav_sidebar', { currentPage: 'penduduk' }); %> <%# Memanggil nav_sidebar.ejs untuk sidebar %>

        <div class="main-content">
            <div class="form-table-container">
                <h3 id="form-title">Tambah Data Penduduk</h3>
                <form id="penduduk-form">
                    <input type="hidden" id="pendudukId" name="pendudukId">
                    <div class="form-group">
                        <label for="nama">Nama Lengkap:</label>
                        <input type="text" id="nama" name="nama" required>
                    </div>
                    <div class="form-group">
                        <label for="nik">NIK:</label>
                        <input type="text" id="nik" name="nik" required pattern="\d{16}" title="NIK harus 16 digit angka">
                    </div>
                    <div class="form-group">
                        <label for="tanggalLahir">Tanggal Lahir:</label>
                        <input type="date" id="tanggalLahir" name="tanggalLahir" required>
                    </div>
                    <div class="form-group">
                        <label for="alamat">Alamat:</label>
                        <textarea id="alamat" name="alamat" rows="3" required></textarea>
                    </div>
                    <div class="form-group">
                        <label for="id_jorong">Jorong:</label>
                        <select id="id_jorong" name="id_jorong" required>
                            <option value="">-- Pilih Jorong --</option>
                            </select>
                    </div>
                    <div class="form-group checkbox">
                        <input type="checkbox" id="dapatBantuan" name="dapatBantuan">
                        <label for="dapatBantuan">Menerima Bantuan Sosial?</label>
                    </div>
                    <div class="form-actions">
                        <button type="submit" class="btn">Simpan Data</button>
                        <button type="button" class="btn btn-secondary" id="reset-form-btn">Reset Form</button> 
                    </div>
                </form>

                <div class="table-responsive">
                    <h3 style="margin-top: 2rem; margin-bottom: 1rem; text-align: center;">Daftar Penduduk</h3>
                    <table class="penduduk-table">
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Nama</th>
                                <th>NIK</th>
                                <th>Tgl. Lahir</th>
                                <th>Alamat</th>
                                <th>Jorong</th>
                                <th>Bantuan</th>
                                <th>Aksi</th>
                            </tr>
                        </thead>
                        <tbody id="penduduk-table-body">
                            <tr><td colspan="9" style="text-align: center; padding: 20px;">Memuat data...</td></tr>
                        </tbody>
                    </table>
                </div>
                <div id="penduduk-list"></div>
            </div>
        </div>
    </div>

    <script>
        // Store jorong data globally once fetched
        let jorongData = [];

        document.addEventListener('DOMContentLoaded', () => {
            populateJorongDropdown(); // First, populate dropdown
            fetchPendudukData();    // Then, fetch and display penduduk data
            document.getElementById('penduduk-form').addEventListener('submit', savePenduduk);
            
            document.getElementById('reset-form-btn').addEventListener('click', () => {
                document.getElementById('penduduk-form').reset();
                document.getElementById('pendudukId').value = '';
                document.getElementById('form-title').innerText = 'Tambah Data Penduduk';
                document.getElementById('id_jorong').value = ''; // Reset dropdown
            });
        });

        function showMessage(message, type = 'info') {
            const messageDiv = document.getElementById('penduduk-list');
            messageDiv.innerHTML = `<p class="${type}-message">${message}</p>`;
            setTimeout(() => {
                messageDiv.innerHTML = '';
            }, 5000);
        }

        async function populateJorongDropdown() {
            try {
                const response = await fetch('/penduduk/api/jorong');
                const data = await response.json();

                if (data.error) {
                    showMessage(`Error memuat data jorong: ${data.error}`, 'error');
                    return;
                }

                jorongData = data.data; // Store fetched jorong data
                const jorongSelect = document.getElementById('id_jorong');
                jorongSelect.innerHTML = '<option value="">-- Pilih Jorong --</option>'; // Keep default option

                jorongData.forEach(jorong => {
                    const option = document.createElement('option');
                    option.value = jorong.id;
                    option.textContent = jorong.namaJorong;
                    jorongSelect.appendChild(option);
                });
            } catch (error) {
                console.error("Error fetching jorong data:", error);
                showMessage(`Gagal memuat daftar jorong: ${error.message}`, 'error');
            }
        }

        async function fetchPendudukData() {
            try {
                const response = await fetch('/penduduk/api/penduduk');
                const data = await response.json();

                const tableBody = document.getElementById('penduduk-table-body');
                tableBody.innerHTML = '';

                if (data.error) {
                    showMessage(`Error: ${data.error}`, 'error');
                    tableBody.innerHTML = `<tr><td colspan="9" style="text-align: center; padding: 20px;">Error memuat data: ${data.error}</td></tr>`;
                    return;
                }

                if (data.data && data.data.length > 0) {
                    let no = 1;
                    data.data.forEach(penduduk => {
                        const row = tableBody.insertRow();
                        row.innerHTML = `
                            <td>${no++}</td>
                            <td>${penduduk.nama || ''}</td>
                            <td>${penduduk.nik || ''}</td>
                            <td>${penduduk.tanggalLahir ? new Date(penduduk.tanggalLahir).toISOString().split('T')[0] : ''}</td>
                            <td>${penduduk.alamat || ''}</td>
                            <td>${penduduk.namaJorong || ''}</td> <td>${(penduduk.dapatBantuan === 1 || penduduk.dapatBantuan === true) ? 'Ya' : 'Tidak'}</td>
                            <td>
                                <button class="btn btn-edit" 
                                    data-id="${penduduk.id}" 
                                    data-nama="${penduduk.nama || ''}" 
                                    data-nik="${penduduk.nik || ''}" 
                                    data-tanggallahir="${penduduk.tanggalLahir ? new Date(penduduk.tanggalLahir).toISOString().split('T')[0] : ''}" 
                                    data-alamat="${penduduk.alamat || ''}" 
                                    data-idjorong="${penduduk.id_jorong || ''}" 
                                    data-dapatbantuan="${penduduk.dapatBantuan}">
                                    Edit
                                </button>
                                <button class="btn btn-delete" data-id="${penduduk.id}">Hapus</button>
                            </td>
                        `;
                    });
                    
                    document.querySelectorAll('.btn-edit').forEach(button => {
                        button.addEventListener('click', (e) => {
                            const data = e.target.dataset;
                            editPenduduk(
                                data.id, 
                                data.nama, 
                                data.nik, 
                                data.tanggallahir, 
                                data.alamat, 
                                data.idjorong, // Pass id_jorong
                                data.dapatbantuan == '1' || data.dapatbantuan === 'true' 
                            );
                        });
                    });
                    document.querySelectorAll('.btn-delete').forEach(button => {
                        button.addEventListener('click', (e) => {
                            deletePenduduk(e.target.dataset.id);
                        });
                    });

                } else {
                    tableBody.innerHTML = `<tr><td colspan="9" style="text-align: center; padding: 20px;">Belum ada data penduduk.</td></tr>`;
                }
            } catch (error) {
                console.error("Error fetching data:", error);
                showMessage(`Gagal memuat data: ${error.message}`, 'error');
                const tableBody = document.getElementById('penduduk-table-body');
                tableBody.innerHTML = `<tr><td colspan="9" style="text-align: center; padding: 20px;">Gagal memuat data: ${error.message}</td></tr>`;
            }
        }

        async function savePenduduk(event) {
            event.preventDefault();

            const form = event.target;
            const id = form.pendudukId.value;
            const nama = form.nama.value;
            const nik = form.nik.value;
            const tanggalLahir = form.tanggalLahir.value;
            const alamat = form.alamat.value;
            const id_jorong = form.id_jorong.value; // Get the selected jorong ID
            const dapatBantuan = form.dapatBantuan.checked;

            // Find the jorong name based on the selected ID for potential display feedback or backend validation if needed
            const selectedJorong = jorongData.find(j => j.id == id_jorong);
            const jorongNama = selectedJorong ? selectedJorong.namaJorong : '';

            const pendudukData = { nama, nik, tanggalLahir, alamat, id_jorong, jorong: jorongNama, dapatBantuan }; // Include id_jorong and jorong nama

            let url = '/penduduk/api/penduduk';
            let method = 'POST';

            if (id) {
                url = `/penduduk/api/penduduk/${id}`;
                method = 'PUT';
            }

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(pendudukData)
                });

                const result = await response.json();

                if (response.ok) {
                    showMessage(result.message, 'info');
                    form.reset(); 
                    form.pendudukId.value = ''; 
                    document.getElementById('form-title').innerText = 'Tambah Data Penduduk';
                    document.getElementById('id_jorong').value = ''; // Reset dropdown
                    fetchPendudukData(); // Refresh table
                } else {
                    showMessage(`Error: ${result.error || result.message}`, 'error');
                }
            } catch (e) {
                console.error("Error saving document: ", e);
                showMessage("Gagal menyimpan data: " + e.message, 'error');
            }
        }

        // Populate form for editing
        function editPenduduk(id, nama, nik, tanggalLahir, alamat, id_jorong, dapatBantuan) {
            const form = document.getElementById('penduduk-form');
            form.pendudukId.value = id;
            form.nama.value = nama;
            form.nik.value = nik;
            form.tanggalLahir.value = tanggalLahir;
            form.alamat.value = alamat;
            form.id_jorong.value = id_jorong; // Set the selected value for the dropdown
            form.dapatBantuan.checked = (dapatBantuan === true || dapatBantuan === 'true' || dapatBantuan === 1 || dapatBantuan === '1');
            document.getElementById('form-title').innerText = 'Edit Data Penduduk (ID: ' + id + ')';
        }

        async function deletePenduduk(id) {
            if (confirm('Apakah Anda yakin ingin menghapus data ini?')) {
                try {
                    const response = await fetch(`/penduduk/api/penduduk/${id}`, {
                        method: 'DELETE'
                    });

                    const result = await response.json();

                    if (response.ok) {
                        showMessage(result.message, 'info');
                        fetchPendudukData(); // Refresh table
                    } else {
                        showMessage(`Error: ${result.error || result.message}`, 'error');
                    }
                } catch (e) {
                    console.error("Error deleting document: ", e);
                    showMessage("Gagal menghapus data: " + e.message, 'error');
                }
            }
        }
    </script>
</body>
</html>